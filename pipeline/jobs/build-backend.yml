parameters:
  workingDirectory: ""
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"

steps:
  - task: DotNetCoreCLI@2
    inputs:
      command: restore
      projects: |
        **/*.csproj
      workingDirectory: ${{ parameters.workingDirectory }}
    displayName: "Restore Dependencies"

  - task: DotNetCoreCLI@2
    inputs:
      command: build
      projects: |
        **/*.csproj
      workingDirectory: ${{ parameters.workingDirectory }}
      arguments: "-c ${{ parameters.buildConfiguration }}"
    displayName: "Build Projects"

  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: |
        **/*Tests.csproj
      workingDirectory: ${{ parameters.workingDirectory }}
      arguments: "-c ${{ parameters.buildConfiguration }} /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura"
    displayName: "Run Tests"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: "cobertura"
      summaryFileLocation: $(System.DefaultWorkingDirectory)/${{ parameters.workingDirectory }}/**/coverage.cobertura.xml
      pathToSources: $(System.DefaultWorkingDirectory)/${{ parameters.workingDirectory }}/
      #reportDirectory: # Optional
      #additionalCodeCoverageFiles: # Optional
      failIfCoverageEmpty: false
    displayName: "Publish Tests coverage result"

  - task: DotNetCoreCLI@2
    inputs:
      command: "publish"
      projects: |
        **/*.csproj
      workingDirectory: ${{ parameters.workingDirectory }}
      arguments: "-c ${{ parameters.buildConfiguration }} -o $(Build.ArtifactStagingDirectory)/${{ parameters.workingDirectory }}/_publish"
      publishWebProjects: false
      zipAfterPublish: true
    displayName: "dotnet publish"

  - publish: $(Build.ArtifactStagingDirectory)/${{ parameters.workingDirectory }}/_publish
    artifact: $(projectName)
    displayName: "Publish Backend Artifacts"
